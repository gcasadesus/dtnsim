# =============================================================================
# === test_3.yaml
# =============================================================================
#
# Author: Marc Sanchez Net
# Date: 05/11/2018
# 
# This test demonstrates the following functionality/blocks:
#
#   1) Based on ``test_3.yaml``
#   2) Use a multiband LTP duct to manage the X and Ka-band link
#
# Note: Parameters of MBLTP are optimal
#
# =============================================================================
# === GLOBAL CONFIGURATION PARAMETERS
# =============================================================================

# Global settings file for LTP testing
globals:
  indir:    "./tests/inputs/"
  outdir:   "./tests/results/"
  outfile:  "test_4.h5"
  logfile:  "Test Log.log"
  log:      False
  track:    True

# =============================================================================
# === SCENARIO AND NETWORK
# =============================================================================

# Scenario definition
scenario:
  epoch: 01-JAN-2018 00:00:00 UTC

# Mobility model
static_model:
  class: DtnStaticMobilityModel


# Network definition 
network:
  nodes:
    N1: {type: "node1", alias: "Node 1"}
    N2: {type: "node2", alias: "Node 2"}
  connections:
    C1: {origin: "N1", destination: "N2", type: "connection"}

# =============================================================================
# === NODES
# =============================================================================

# Node type definitions
node1:
  class:      DtnNode
  router:     static_router
  generators: [file_generator]
  selector:   band_selector
  radios:     [x_radio, ka_radio]
  mobility_model: static_model

node2: 
  class:      DtnNode
  router:     static_router
  generators: []
  selector:   band_selector
  radios:     [x_radio, ka_radio]
  mobility_model: static_model

# Static router definition
static_router:
  class:  DtnStaticRouter
  routes:
    N1: {N2: N2}
    N2: {N1: N1}

# Outduct selector
band_selector:
  class: DtnDefaultSelector

# =============================================================================
# === CONNECTIONS, DUCTS AND RADIOS
# =============================================================================

# Connection with 2 bands and LTP
connection:
  class:    DtnStaticConnection
  ducts:    {MBLTP: 'multiband_duct'}
  mobility_model: static_model

# Multiband outduct
multiband_duct:
  class: ["DtnInductMBLTP", "DtnOutductMBLTP"]
  parser: DtnMBLTPDuctParser
  bands: ['X', 'Ka']
  agg_size_limit: !!float 120e3       # Arbitrary block size
  segment_size: !!float 8e3           # Arbitrary segment size
  report_timer: 1201
  checkpoint_timer: 1201
  X: 'x_radio'
  Ka: 'ka_radio'

# X-band radio
x_radio:
  class: "DtnBasicRadio"
  rate: !!float 256e3
  BER: !!float 1e-5

# Ka-band radio
ka_radio:
  class: "DtnBasicRadio"
  rate: !!float 1e6
  BER: !!float 1e-4

# =============================================================================
# === TRAFFIC GENERATORS
# =============================================================================

# File generator
file_generator:
  class: "DtnFileGenerator"
  origin: 'N1'
  destination: 'N2'
  size: !!float 220e6               # Arbitrary file size
  data_type: 'file'
  bundle_size: !!float 50e3
  critical: False

# =============================================================================
# === REPORTS
# =============================================================================

reports:
  - DtnArrivedBundlesReport

# =============================================================================
# === EOF
# =============================================================================