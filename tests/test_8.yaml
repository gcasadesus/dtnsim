# =============================================================================
# === test_8.yaml
# =============================================================================
#
# Author: Marc Sanchez Net
# Date: 05/22/2018
# 
# This test demonstrates the following functionality/blocks:
#
#   1) Based on ``test_7.yaml``
#   2) Use ``DtnMarkovGenerator`` to create bundles based on Markov flows
#   3) Exercise ``DtnCGRouter``by providing a complex (>10 node) network
#   4) Exercise the CGR route computation algorithm.
#
# This test is based on Phobos Scn 2. During the simulation, all ducts are basic
# to reduce computational time.
#
# =============================================================================
# === GLOBAL CONFIGURATION PARAMETERS
# =============================================================================

# Global settings file for LTP testing
globals:
  indir:    './tests/inputs/test_8'
  outdir:   './tests/results/'
  outfile:  'test_8.h5'
  logfile:  'Test Log.log'
  log:      False
  track:    True

# =============================================================================
# === SCENARIO AND NETWORK
# =============================================================================

# Scenario definition
scenario:
  epoch: 01-JAN-2034 00:00:00 UTC
  #seed: 0

# Define mobility model
scheduled_mobility:
  class:    DtnScheduledMobilityModel
  contacts: contact_table.xlsx
  ranges:   range_intervals.xlsx

# Network definition 
network:
  nodes:
    MR1:     {type: 'relay', alias: 'Areostationary Relay 1 --  Mars'}
    DSH:     {type: 'relay', alias: 'CMTP - DSH (Unoccupied; Astronauts on Surface)'}
    MCC:     {type: 'Earth', alias: 'CMTP - Mission Control (Earth)'}
    PSH:     {type: 'lander', alias: 'CMTP-Phobos Surface Habitat (Crew of 2)'}
    HHC:     {type: 'orbiter', alias: 'HedgeHog Carrier'}
    MMU:     {type: 'surface', alias: 'Manned Maneuvering Unit'}
    EVA1:    {type: 'surface', alias: 'Mars EVA Suit 1'}
    EVA2:    {type: 'surface', alias: 'Mars EVA Suit 2'}
    MOI:     {type: 'orbiter', alias: 'Mars Orbit Insertion Stage'}
    PDSR:    {type: 'orbiter', alias: 'Mars Phobos-Deimos Survey Mission Relay'}
    PEV:     {type: 'surface', alias: 'Phobos Pressurized Excursion Vehicle - Unoccupied Docked to Habitat'}
    PTX:     {type: 'surface', alias: 'Phobos Taxi - Unoccupied Docked to Habitat'}
    EDL_MAV: {type: 'orbiter', alias: 'Un-crewed Mars EDL Test - Ascent Vehicle (MAV)'}
    EDL_DS:  {type: 'orbiter', alias: 'Un-crewed Mars EDL Test - Descent Stage'}
  connections:
    # DTE/DFE links
    C1:  {origin: 'MCC', destination: 'MR1', type: 'BiDTE'}
    C2:  {origin: 'MCC', destination: 'DSH', type: 'BiDTE'}
    C3:  {origin: 'MCC', destination: 'PSH', type: 'UniDTE'}
    # ISL links
    C4:  {origin: 'MR1', destination: 'DSH', type: 'SA'}
    # Proximity links
    C5:  {origin: 'DSH', destination: 'PSH', type: 'SA'}
    C6:  {origin: 'DSH', destination: 'HHC', type: 'MA'}
    C7:  {origin: 'DSH', destination: 'PDSR', type: 'MA'}
    C8:  {origin: 'DSH', destination: 'EDL_MAV', type: 'MA'}
    C9:  {origin: 'DSH', destination: 'EDL_DS', type: 'MA'}
    C10: {origin: 'DSH', destination: 'MOI', type: 'MA'}
    C11: {origin: 'PSH', destination: 'PEV', type: 'WLAN'}
    C12: {origin: 'PSH', destination: 'PTX', type: 'WLAN'}
    C13: {origin: 'PSH', destination: 'EVA1', type: 'WLAN'}
    C14: {origin: 'PSH', destination: 'EVA2', type: 'WLAN'}
    C15: {origin: 'PSH', destination: 'MMU', type: 'WLAN'}
    C16: {origin: 'MR1', destination: 'PSH', type: 'SA'}
    C17: {origin: 'MR1', destination: 'HHC', type: 'MA'}
    C18: {origin: 'MR1', destination: 'MOI', type: 'MA'}
    C19: {origin: 'MR1', destination: 'PDSR', type: 'MA'}
    C20: {origin: 'MR1', destination: 'EDL_MAV', type: 'MA'}
    C21: {origin: 'MR1', destination: 'EDL_DS', type: 'MA'}

# =============================================================================
# === NODES
# =============================================================================

# Relay node definition
relay:
  class:      DtnNode
  relay:      True
  router:     bfs_centralized
  generators: [markov_generator]
  selector:   type_selector
  radios:     ['X_radio', 'Ka_radio', 'SA_radio', 'MA_radio']
  mobility_model: scheduled_mobility

# Lander node definition
lander:
  class:      DtnNode
  relay:      True
  router:     bfs_centralized
  generators: [markov_generator]
  selector:   type_selector
  radios:     ['X_radio', 'SA_radio', 'WLAN_radio']
  mobility_model: scheduled_mobility

# Orbiter node definition
orbiter:
  class:      DtnNode
  relay:      False
  router:     bfs_centralized
  generators: [markov_generator]
  selector:   type_selector
  radios:     ['MA_radio']
  mobility_model: scheduled_mobility

# Surface node definition
surface:
  class:      DtnNode
  relay:      False
  router:     bfs_centralized
  generators: [markov_generator]
  selector:   type_selector
  radios:     ['WLAN_radio']
  mobility_model: scheduled_mobility

# Earth node definition
Earth:
  class:      DtnNode
  relay:      False
  router:     bfs_centralized
  generators: [markov_generator]
  selector:   type_selector
  radios:     ['X_radio', 'Ka_radio']
  mobility_model: scheduled_mobility

# Router bfs_centralized definition
bfs_centralized:
  class:            DtnLookupRouter
  algorithm:        bfs
  routes:           route_schedule.xlsx
  links:            links_data.json
  trajectories:     Trajectories_2034.bsp
  router_mode:      fast                    # Use fast mode to save time
  recompute_routes: True                    # Force recomputation to exercise CGR
  excluded_routes:                          # Routes that are not valid
    - ["DSH", "PSH", "MR1"]
    - ["MR1", "PSH", "MR1"]
  max_relay_hops:     3                     # No more than 3 hops in a route are allowed
  num_cores:          4                     # Use 4 cores if possible

# Outduct selector
type_selector:
  class: DtnDataTypeSelector

# =============================================================================
# === CONNECTIONS
# =============================================================================

# Dual band DTE/DFE connection
BiDTE:
  class:    DtnScheduledConnection
  ducts:    {X: 'X_duct_basic', Ka: 'Ka_duct_basic'}
  mobility_model: scheduled_mobility

# Single band DTE/DFE connection
UniDTE:
  class:    DtnScheduledConnection
  ducts:    {X: 'X_duct_basic'}
  mobility_model: scheduled_mobility

# Single Access connection
SA:
  class:    DtnScheduledConnection
  ducts:    {SA: 'SA_duct_basic'}
  mobility_model: scheduled_mobility

# Multiple Access connection
MA:
  class:    DtnScheduledConnection
  ducts:    {MA: 'MA_duct_basic'}
  mobility_model: scheduled_mobility

# WLAN connection
WLAN:
  class:    DtnScheduledConnection
  ducts:    {WLAN: 'WLAN_duct_basic'}
  mobility_model: scheduled_mobility

# =============================================================================
# === DUCTS
# =============================================================================

# X-band duct
X_duct_basic:
  class: ['DtnInductBasic', 'DtnOutductBasic']
  radio: 'X_radio'

# Ka-band duct
Ka_duct_basic:
  class: ['DtnInductBasic', 'DtnOutductBasic']
  radio: 'Ka_radio'

# SA-band duct
SA_duct_basic:
  class: ['DtnInductBasic', 'DtnOutductBasic']
  radio: 'SA_radio'

# MA-band duct
MA_duct_basic:
  class: ['DtnInductBasic', 'DtnOutductBasic']
  radio: 'MA_radio'

# WLAN-band duct
WLAN_duct_basic:
  class: ['DtnInductBasic', 'DtnOutductBasic']
  radio: 'WLAN_radio'

# =============================================================================
# === RADIOS
# =============================================================================

# X-band radio (Enhanced configuration)
X_radio:
  class:      DtnBasicRadio
  rate:       !!float 6e6
  BER:        !!float 0.0

# Ka-band radio (Enhanced configuration)
Ka_radio:
  class:      DtnBasicRadio
  rate:       !!float 200e6
  BER:        !!float 0.0

# SA-band radio (Enhanced configuration)
SA_radio:
  class:      DtnBasicRadio
  rate:       !!float 300e6
  BER:        !!float 0.0

# MA-band radio (Enhanced configuration)
MA_radio:
  class:      DtnBasicRadio
  rate:       !!float 1e6
  BER:        !!float 0.0

# Ka-band radio (Enhanced configuration)
WLAN_radio:
  class:      DtnBasicRadio
  rate:       !!float 25e6
  BER:        !!float 0.0

# =============================================================================
# === TRAFFIC GENERATORS
# =============================================================================

# Bundle generator. Use file ``traffic.scenario`` as input
markov_generator:
  class:            DtnMarkovBundleGenerator
  file:             traffic.scenario
  min_bundle_size:  !!float 8e6
  max_bundle_size:  !!float 160e6
  latency_fraction: 0.5

# =============================================================================
# === REPORTS
# =============================================================================

reports:
  - DtnArrivedBundlesReport

# =============================================================================
# === EOF
# =============================================================================